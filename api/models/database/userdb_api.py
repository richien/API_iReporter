from api.models.database.connector import Connect


def create_user(**user):
    """
    Insert a new user into the users table.
    Return the user's autogenerated ID.
    """
    sql_insert = """
        INSERT INTO users (
            firstname,
            lastname,
            othernames,
            email,
            phonenumber,
            username,
            password,
            isAdmin)
        VALUES (%s,%s,%s,%s,%s,%s,%s,%s)
        RETURNING user_id;
    """
    try:
        conn = Connect()
        cur = conn.up()
        cur.execute(sql_insert,(
            user['firstname'],
            user['lastname'],
            user['othernames'],
            user['email'],
            user['phonenumber'],
            user['username'],
            user['password'],
            user['isAdmin']
        ))
        user_id = cur.fetchone()
        conn.commit()
        return user_id
    except Exception as error:
        return error
    finally:
        conn.down()

def check_username_or_email_exists(username, email):
    """
    check whether a username or email exists in
    the users table.
    Return the username and email if it exists
    """
    sql_select = """
        SELECT username, email 
        FROM users 
        WHERE username = '{0}'
        OR email = '{1}'
    """.format(username, email)
    result = None
    try:
        conn = Connect()
        cur = conn.up()
        cur.execute(sql_select)    
        rows = cur.fetchall()
        if rows:
            result = rows
        return result
    except Exception as error:
        return error
    finally:
        conn.down()

def check_username_exists(username):
    """
    check whether a username exists in
    the users table.
    Return the username, email, password, user_id and isAdmin if it exists
    """
    sql_select = """
        SELECT * 
        FROM users 
        WHERE username = '{0}'
    """.format(username)
    try:
        conn = Connect()
        cur = conn.up()
        cur.execute(sql_select)    
        row = cur.fetchone()
        return row
    except Exception as error:
        return error
    finally:
        conn.down()

def check_email_exists(email):
    """
    check whether a email exists in
    the users table.
    Return the username, email, password, user_id and isAdmin if it exists
    """
    sql_select = """
        SELECT *
        FROM users 
        WHERE email = '{0}'
    """.format(email)
    try:
        conn = Connect()
        cur = conn.up()
        cur.execute(sql_select)    
        row = cur.fetchone()
        return row
    except Exception as error:
        return error
    finally:
        conn.down()


def get_all_users():
    """
    Retrieve all users.
    
    """
    sql = """
       SELECT *
        FROM users
        ORDER BY registered DESC;
    """

    try:
        conn = Connect()
        cur = conn.up()
        cur.execute(sql)
        rows = cur.fetchall()
        return rows
    except Exception as error:
        return error
    finally:
        conn.down()

def get_user_by_id(user_id):
    """
    Retrieve a user given a user ID.
    
    """
    sql = """
       SELECT (
            user_id,
            firstname,
            lastname,
            othernames,
            email,
            phonenumber,
            username,
            registered,
            isAdmin) 
        FROM users
        WHERE user_id = '{user_id}'
        ORDER BY registered DESC;
    """

    try:
        conn = Connect()
        cur = conn.up()
        cur.execute(sql)
        row = cur.fetchone()
        return row
    except Exception as error:
        return error
    finally:
        conn.down()



def delete_user_by_email(email):
    """
    Delete all users.
    """
    sql_delete = f"""
        DELETE FROM users
        WHERE email = '{email}'; 
    """
    try:
        conn = Connect()
        cur = conn.up()
        cur.execute(sql_delete)
        conn.commit()
    except Exception as error:
        return error
    finally:
        conn.down()